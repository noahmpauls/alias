:root {
  --positive-light: hsl(110, 49%, 50%);
  --positive: hsl(110, 49%, 43%);
  --positive-dark: hsl(110, 49%, 35%);

  --neutral-lighter: hsl(221, 51%, 97%);
  --neutral-light: hsl(221, 51%, 57%);
  --neutral: hsl(221, 51%, 50%);
  --neutral-dark: hsl(221, 51%, 37%);

  --negative-light: hsl(5deg, 50%, 97%);
  --negative: hsl(5deg, 70%, 50%);
  --negative-dark: hsl(5deg, 70%, 40%);

  --gray-lighter: hsl(0deg, 0%, 99%);
  --gray-light: hsl(0deg, 0%, 90%);
  --gray: hsl(0deg, 0%, 70%);
  --gray-dark: hsl(0deg, 0%, 50%);
  --gray-darker: hsl(0deg, 0%, 30%);
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
}

html {
  font-family: sans-serif;
  font-size: 0.9rem;
}

body {
  inline-size: 28rem;
}

header {
  padding-block-start: 0.5rem;
  padding-block-end: 1rem;
  padding-inline: 0.5rem;
}

main {
  padding-block-end: 0.5rem;
  padding-inline: 0.5rem;
}

h2 {
  font-size: 1.1rem;
  margin: 0;

  input {
    color: black;
    font-family: monospace;
    font-size: 1.2rem;
    inline-size: 100%;
  }
}

button {
  display: block;
  font-family: sans-serif;
  border: none;
  border-radius: 0.2rem;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  justify-content: center;
  font-size: 1.1rem;
  padding-inline-start: 0.3rem;
  padding-inline-end: 0.7rem;
  padding-block: 0.3rem;

  &.positive {
    --button-bg-primary: var(--positive);
    --button-bg-active: var(--positive-dark);
    --button-bg-hover: var(--positive-light);
  }

  &.neutral {
    --button-bg-primary: var(--neutral);
    --button-bg-active: var(--neutral-dark);
    --button-bg-hover: var(--neutral-light);
  }

  &.negative {
    --button-bg-primary: var(--negative);
    --button-bg-active: var(--negative-dark);
    --button-bg-hover: var(--negative-light);
  }

  &.muted {
    --button-bg-primary: var(--gray-darker);
    --button-bg-active: var(--gray-dark);
    --button-bg-hover: var(--gray-light);
  }
}

button.icon {
  padding-inline: 0.3rem;
  padding-block: 0.3rem;
}

button.filled {
  background-color: var(--button-bg-primary);
  color: white;

  &:hover,
  &:focus {
    background-color: var(--button-bg-hover);
  }

  &:active {
    background-color: var(--button-bg-active);
  }
}

button.subtle {
  background-color: transparent;

  color: var(--gray-darker);

  &:hover,
  &:focus {
    color: white;
    background-color: var(--button-bg-primary);
  }

  &:active {
    background-color: var(--button-bg-active);
  }
}

input {
  color: var(--gray-darker);
  background-color: var(--gray-lighter);
  border: 1px solid var(--gray);
  border-radius: 0.2rem;
  font-family: sans-serif;
  font-size: 0.9rem;
  font-weight: inherit;
  padding-block: 0.2rem;
  padding-inline: 0.4rem;

  &.subtle {
    border-inline-color: transparent;
    border-block-start-color: transparent;
    border-block-end-color: var(--gray);
    background-color: transparent;
    border-radius: 0;
  }

  &:invalid {
    border-radius: 0.2rem;
    border-color: var(--negative);
    background-color: var(--negative-light);
  }

}

svg.icon {
  color: inherit;
  display: block;
  inline-size: 1.25rem;
  block-size: 1.25rem;

  &.small {
    inline-size: 1rem;
    block-size: 1rem;
  }

  &.large {
    inline-size: 1.5rem;
    block-size: 1.5rem;
  }
}

alias-list > ul {
  margin-block-start: 1rem;
  padding: 0;
  list-style: none;

  > * + * {
    margin-block-start: 0.4rem;
  }
}

.validation-error {
  font-size: 0.8rem;
  color: var(--negative-dark);
}

.h-stack {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;

  &.split {
    justify-content: space-between;
  }

  &.center {
    justify-content: center;
  }
}

.align-end {
  display: flex;
  flex-direction: row;
  justify-content: end;
  align-items: center;
  column-gap: 0.2rem;
}

.input-container {
  display: grid;
  grid-template-columns: max-content 1fr;
  column-gap: 0.3rem;

  > * {
    grid-column: 1 / -1;
    display: grid;
    grid-template-columns: subgrid;
    align-items: center;
  }

  .offset {
    grid-column: 2 / -1;
  }

  label {
    text-align: end;
  }
}

alias-creator .input-container > * + * {
  margin-block-start: 0.4rem;
}

.grow-first {
  display: flex;
  flex-direction: row;

  > :first-child {
    flex-grow: 1;
  }

  > * + * {
    margin-inline-start: 0.5rem;
  }
}

alias-manager {
  display: block;
  border: 1px solid transparent;
  border-radius: 0.4rem;
  padding-block: 0.2rem;
  padding-inline-start: 0;
  padding-inline-end: 0.4rem;

  > * + * {
    margin-block-start: 0.3rem;
  }

  button {
    visibility: hidden;
  }

  button[type="submit"] {
    margin-block-start: 0.2rem;
  }

  &:hover,
  &:focus-within,
  &.changed {
    button {
      visibility: visible;
    }

    background-color: var(--gray-lighter);
    border-color: var(--gray-light);
  }

  &.changed {
    background-color: var(--neutral-lighter);
    border-color: var(--neutral);
  }

  .input-container {
    padding-inline-start: 0.5rem;
    
    > * + * {
      margin-block-start: 0.2rem;
    }
  }

  label.subdued {
    visibility: visible;
    color: var(--gray);
  }

  &:not(
    :hover,
    :focus-within,
    .changed
  ) {
    label.subdued {
      visibility: hidden;
    }

    input:not(:invalid) {
      background-color: unset;
      border-color: transparent;
    }
  }
}

alias-data {
  display: block;
  margin-block-end: 3rem;

  #import,
  #export {
    padding-inline: 1rem;
    block-size: 3rem;
  }
}
